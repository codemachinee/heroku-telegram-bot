# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ –º–æ–¥—É–ª–µ–π
import gspread
import yadisk
import g4f
from datetime import datetime
from random import *
from aiogram.types import FSInputFile
from paswords import *

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è YaDisk
y = yadisk.YaDisk(token=yadisk_token)

# –°–ø–∏—Å–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –î–∞–≤–∏–Ω—á–∏ –∏ –ê—Ä—Ç—É—Ä–∞, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
saved_messages_davinci = []
saved_messages_artur = []
provider_list = [g4f.Provider.CodeLinkAva, g4f.Provider.Ails,
                 g4f.Provider.ChatgptAi, g4f.Provider.DeepAi, g4f.Provider.H2o]


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —è—á–µ–π–∫–∏ –Ω–∞ 1
async def value_plus_one(j):
    gc = gspread.service_account(filename='pidor-of-the-day-af3dd140b860.json')
    sh = gc.open("bot_statistic")
    worksheet = sh.get_worksheet(0)
    worksheet.update(j, str(int(worksheet.acell(j).value) + 1))


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
async def pstat(cell):
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets API
    gc = gspread.service_account(filename='pidor-of-the-day-af3dd140b860.json')

    # –û—Ç–∫—Ä—ã—Ç–∏–µ Google Sheets –¥–æ–∫—É–º–µ–Ω—Ç–∞
    sh = gc.open("bot_statistic")
    worksheet = sh.get_worksheet(0)

    # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –ø–∏–¥–æ—Ä–æ–≤
    d1 = [
        (int(worksheet.acell(f'{cell}1').value), "–§–∏–ª—á"),
        (int(worksheet.acell(f'{cell}2').value), "–ò–≥–æ—Ä—å"),
        (int(worksheet.acell(f'{cell}3').value), "–°–µ—Ä–µ–≥–∞"),
        (int(worksheet.acell(f'{cell}4').value), "–°–∞–Ω—è"),
        (int(worksheet.acell(f'{cell}5').value), "–õ–µ—Ö–∞(–°–∞–Ω—è)"),
        (int(worksheet.acell(f'{cell}6').value), "–õ–µ—Ö–∞(–§–∏—Ç–∏–ª—å)"),
        (int(worksheet.acell(f'{cell}7').value), "–î–∏–º–∞–Ω"),
        (int(worksheet.acell(f'{cell}8').value), "–ö–∏—Ä—é—Ö–∞ –ø–æ–¥–∫–∞—Å—Ç–µ—Ä"),
        (int(worksheet.acell(f'{cell}9').value), "–ñ–µ–Ω–µ–∫ —Å–ø–∞—Å–∞—Ç–µ–ª—å"),
        (int(worksheet.acell(f'{cell}10').value), "–ñ–µ–Ω–µ–∫ —Å—Ç–∞—Ä—ã–π")
    ]

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–∏–¥–æ—Ä—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    d1_sort = sorted(d1, reverse=True)

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –ø–∏–¥–æ—Ä–æ–≤
    return (f'''–†–ï–ô–¢–ò–ù–ì –ü–ò–î–ê–†–ê–°–û–í:

    1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞)
    2. {d1_sort[1][1]} -----> {d1_sort[1][0]} —Ä–∞–∑(–∞)
    3. {d1_sort[2][1]} -----> {d1_sort[2][0]} —Ä–∞–∑(–∞)
    4. {d1_sort[3][1]} -----> {d1_sort[3][0]} —Ä–∞–∑(–∞)
    5. {d1_sort[4][1]} -----> {d1_sort[4][0]} —Ä–∞–∑(–∞)
    6. {d1_sort[5][1]} -----> {d1_sort[5][0]} —Ä–∞–∑(–∞)
    7. {d1_sort[6][1]} -----> {d1_sort[6][0]} —Ä–∞–∑(–∞)
    8. {d1_sort[7][1]} -----> {d1_sort[7][0]} —Ä–∞–∑(–∞)
    9. {d1_sort[8][1]} -----> {d1_sort[8][0]} —Ä–∞–∑(–∞)
    10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)

    –î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à —á–µ–º–ø–∏–æ–Ω {d1_sort[0][1]}! –ï–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ 
    –º–æ–∂–µ—Ç –ø–æ–∑–∞–≤–∏–¥–æ–≤–∞—Ç—å –≠–ª—Ç–æ–Ω –î–∂–æ–Ω –∏ –¥—Ä—É–≥–∏–µ –í–µ–ª–∏–∫–∏–µ. –ü–æ–∂–µ–ª–∞–µ–º
    –µ–º—É –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.

    /help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É''')


# —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω—É–ª—è—é—â–∞—è –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å –Ω–æ–≤–æ–≥–æ –º–µ—Å—è—Ü–∞
async def obnulenie_stat(bot):
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
    champions = []

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–≥–æ –º–µ—Å—è—Ü–∞
    if datetime.now().day == 1 and datetime.now().month != 1:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets API
        gc = gspread.service_account(filename='pidor-of-the-day-af3dd140b860.json')
        sh = gc.open("bot_statistic")
        worksheet = sh.get_worksheet(0)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        d1 = [(int(worksheet.acell('A1').value), "–§–∏–ª—á"), (int(worksheet.acell('A2').value), "–ò–≥–æ—Ä—å"),
              (int(worksheet.acell('A3').value), "–°–µ—Ä–µ–≥–∞"), (int(worksheet.acell('A4').value), "–°–∞–Ω—è"),
              (int(worksheet.acell('A5').value), "–õ–µ—Ö–∞(–°–∞–Ω—è)"), (int(worksheet.acell('A6').value), "–õ–µ—Ö–∞(–§–∏—Ç–∏–ª—å)"),
              (int(worksheet.acell('A7').value), "–î–∏–º–∞–Ω"), (int(worksheet.acell('A8').value), "–ö–∏—Ä—é—Ö–∞ –ø–æ–¥–∫–∞—Å—Ç–µ—Ä"),
              (int(worksheet.acell('A9').value), "–ñ–µ–Ω–µ–∫ —Å–ø–∞—Å–∞—Ç–µ–ª—å"),
              (int(worksheet.acell('A10').value), "–ñ–µ–Ω–µ–∫ —Å—Ç–∞—Ä—ã–π")]

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–∏–¥–æ—Ä—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        d1_sort = sorted(d1, reverse=True)

        # –ü–æ–∏—Å–∫ —è—á–µ–µ–∫ —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º
        cells = worksheet.findall(d1_sort[0][0], in_column=1)
        for cell in cells:
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
            worksheet.update(f'C{cell.row}', f'{int(worksheet.acell(f"C{cell.row}").value) + 1}')
            champions.append(str(worksheet.acell(f"B{cell.row}").value))

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏—Ç–æ–≥–∞–º–∏ –º–µ—Å—è—Ü–∞
        if len(champions) == 1:
            await bot.send_message(group_id, f'''–ò–¢–û–ì–ò –ú–ï–°–Ø–¶–ê:

             1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞)
             2. {d1_sort[1][1]} -----> {d1_sort[1][0]} —Ä–∞–∑(–∞)
             ... (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç)
             10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)

            –î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à —á–µ–º–ø–∏–æ–Ω –º–µ—Å—è—Ü–∞ {d1_sort[0][1]}üéâüéâüéâ! 
            –í —Ç—è–∂–µ–ª–µ–π—à–µ–π –±–æ—Ä—å–±–µ –æ–Ω —Ç–∞–∫–∏ –≤—ã—Ä–≤–∞–ª —Å–≤–æ—é –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é –ø–æ–±–µ–¥—É. 
            –ü–æ–∂–µ–ª–∞–µ–º –µ–º—É –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.''')
        else:
            await bot.send_message(group_id, f'''–ò–¢–û–ì–ò –ú–ï–°–Ø–¶–ê:

                         1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞)
                         2. {d1_sort[1][1]} -----> {d1_sort[1][0]} —Ä–∞–∑(–∞)
                         ... (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç)
                         10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)

            –î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à–∏ —á–µ–º–ø–∏–æ–Ω—ã –º–µ—Å—è—Ü–∞ {", ".join(champions)}! 
            –í —Ç—è–∂–µ–ª–µ–π—à–µ–π –±–æ—Ä—å–±–µ –æ–Ω–∏ —Ç–∞–∫–∏ –≤—ã—Ä–≤–∞–ª–∏ —Å–≤–æ—é –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é –ø–æ–±–µ–¥—É. 
            –ü–æ–∂–µ–ª–∞–µ–º –∏–º –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.''')

        # –û–±–Ω—É–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
        worksheet.update('A1:A10', [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω–µ—Ü –≥–æ–¥–∞
    elif datetime.now().day == 31 and datetime.now().month == 12:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–≤–µ–¥–µ–Ω–∏–∏ –∏—Ç–æ–≥–æ–≤ –≥–æ–¥–∞
        await bot.send_message(group_id, f'üö®üö®üö®–í–Ω–∏–º–∞–Ω–∏–µ!üö®üö®üö® –ü–∏–¥—Ä –ö–ª–∞—É—Å –ø–æ–¥–≤–æ–¥–∏—Ç –∏—Ç–æ–≥–∏...\n'
                                         f'–ö—Ç–æ –∂–µ —Å—Ç–∞–Ω–µ—Ç –ø–∏–¥–∞—Ä–æ–º –≥–æ–¥–∞?')
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
        file = FSInputFile(r'gif_mr.Bin.mp4', 'rb')
        await bot.send_video(group_id, file)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets API
        gc = gspread.service_account(filename='pidor-of-the-day-af3dd140b860.json')
        sh = gc.open("bot_statistic")
        worksheet = sh.get_worksheet(0)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        d1 = [(int(worksheet.acell('C1').value), "–§–∏–ª—á"), (int(worksheet.acell('C2').value), "–ò–≥–æ—Ä—å"),
              (int(worksheet.acell('C3').value), "–°–µ—Ä–µ–≥–∞"), (int(worksheet.acell('C4').value), "–°–∞–Ω—è"),
              (int(worksheet.acell('C5').value), "–õ–µ—Ö–∞(–°–∞–Ω—è)"), (int(worksheet.acell('C6').value), "–õ–µ—Ö–∞(–§–∏—Ç–∏–ª—å)"),
              (int(worksheet.acell('C7').value), "–î–∏–º–∞–Ω"), (int(worksheet.acell('C8').value), "–ö–∏—Ä—é—Ö–∞ –ø–æ–¥–∫–∞—Å—Ç–µ—Ä"),
              (int(worksheet.acell('C9').value), "–ñ–µ–Ω–µ–∫ —Å–ø–∞—Å–∞—Ç–µ–ª—å"),
              (int(worksheet.acell('C10').value), "–ñ–µ–Ω–µ–∫ —Å—Ç–∞—Ä—ã–π")]

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–∏–¥–æ—Ä—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        d1_sort = sorted(d1, reverse=True)

        # –ü–æ–∏—Å–∫ —è—á–µ–µ–∫ —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º
        cells = worksheet.findall(str(d1_sort[0][0]), in_column=3)
        for cell in cells:
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
            worksheet.update(f'D{cell.row}', f'{int(worksheet.acell(f"D{cell.row}").value) + 1}')
            champions.append(str(worksheet.acell(f"B{cell.row}").value))

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏—Ç–æ–≥–∞–º–∏ –≥–æ–¥–∞
        if len(champions) == 1:
            await bot.send_message(group_id, f'üçæüçæüçæ–∏–∏.. –∏–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è {d1_sort[0][1]}! '
                                             f'–°–∞–º—ã–π –≥–ª–∞–≤–Ω—ã–π –ø–∏–¥—Ä–∏–ª–∞ —á–µ—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –ø–∏–¥–∞—Ä—Å–∫–æ–≥–æ –≥–æ–¥–∞!!! '
                                             f'{d1_sort[0][1]} –ø—Ä–∏–π–º–∏ –Ω–∞—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ '
                                             f'–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä—Å—Ç–≤—É "–ì–æ–ª—É–±–æ–π —É—Å—Ç—Ä–∏—Ü—ã". '
                                             f'–ù–∞ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ–¥ –Ω–∞ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö —Ç—É—Å–æ–≤–∫–∞—Ö —Ç—ã –Ω–∞ —Ä–∞–∑–ª–∏–≤–µ –∏–±–æ –±–æ–ª—å—à–µ –≤—Å–µ—Ö '
                                             f'–∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –ø–æ—Å–∫–æ—Ä–µ–µ —Å–ø–æ–∏—Ç—å –ø–∞—Ü–∞–Ω–æ–≤. –¢–µ–±–µ —Ç–∞–∫–∂–µ –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑ '
                                             f'–≤ —Ä–∞–∑–º–µ—Ä–µ –≤—Å–µ—Ö –¥–µ–Ω–µ–≥ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –≤ –Ω–∞—à–µ–º —Ñ–æ–Ω–¥–µ (–≤ —Å–ª—É—á–∞–µ –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è '
                                             f'–≤–æ–∑–º–µ—â–∞–µ–º –≥–ª—É–±–æ–∫–∏–º —É–≤–∞–∂–µ–Ω–∏–µ–º. –•–æ—Ä–æ—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ –≥–æ–¥–∞ –≤ –Ω–æ–≤–æ–º —Å—Ç–∞—Ç—É—Å–µ!')
            await bot.send_message(group_id, f'''–ò–¢–û–ì–ò –ì–û–î–ê:

                             1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞) üéâüéâüéâ
                             ... (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç)
                             10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)

            –î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à –ü–ò–î–ê–†–ê–° –≥–æ–¥–∞ {d1_sort[0][1]}! 
            –í —Ç—è–∂–µ–ª–µ–π—à–µ–π –±–æ—Ä—å–±–µ –æ–Ω —Ç–∞–∫–∏ –≤—ã—Ä–≤–∞–ª —Å–≤–æ—é –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é –ø–æ–±–µ–¥—É. 
            –ü–æ–∂–µ–ª–∞–µ–º –µ–º—É –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.''')
            await bot.send_message(group_id, f'–ó–∞ —Ç–æ–±–æ–π –ø—Ä–∏–µ—Ö–∞–ª–∏..')
            file = FSInputFile(r'gif_zverev.mp4', 'rb')
            await bot.send_video(group_id, file)
        else:
            await bot.send_message(group_id, f'üçæüçæüçæ–∏–∏.. –∏–º–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è {", ".join(champions)}! '
                                             f'–í—ã–¥–∞—é—â–∏–µ—Å—è –ø–∏–¥—Ä–∏–ª—ã —á–µ—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –ø–∏–¥–∞—Ä—Å–∫–æ–≥–æ –≥–æ–¥–∞!!! '
                                             f'{", ".join(champions)} –ø—Ä–∏–π–º–∏—Ç–µ –Ω–∞—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ '
                                             f'–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä—Å—Ç–≤—É "–ì–æ–ª—É–±–æ–π —É—Å—Ç—Ä–∏—Ü—ã". '
                                             f'–ù–∞ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ–¥ –Ω–∞ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö —Ç—É—Å–æ–≤–∫–∞—Ö –≤—ã –Ω–∞ —Ä–∞–∑–ª–∏–≤–µ –∏–±–æ –±–æ–ª—å—à–µ –≤—Å–µ—Ö '
                                             f'–∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –ø–æ—Å–∫–æ—Ä–µ–µ —Å–ø–æ–∏—Ç—å –ø–∞—Ü–∞–Ω–æ–≤. –í–∞–º —Ç–∞–∫–∂–µ –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑ '
                                             f'–≤ —Ä–∞–∑–º–µ—Ä–µ –≤—Å–µ—Ö –¥–µ–Ω–µ–≥ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –≤ –Ω–∞—à–µ–º —Ñ–æ–Ω–¥–µ (–≤ —Å–ª—É—á–∞–µ –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è '
                                             f'–≤–æ–∑–º–µ—â–∞–µ–º –≥–ª—É–±–æ–∫–∏–º —É–≤–∞–∂–µ–Ω–∏–µ–º. –•–æ—Ä–æ—à–µ–≥–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ –≤ –Ω–æ–≤–æ–º —Å—Ç–∞—Ç—É—Å–µ!')
            await bot.send_message(group_id, f'''–ò–¢–û–ì–ò –ì–û–î–ê:

                            1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞)
                            ... (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç)
                            10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)

–î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à–∏ –ü–ò–î–ê–†–ê–°—ã –≥–æ–¥–∞ {", ".join(champions)}üéâüéâüéâ! 
–í —Ç—è–∂–µ–ª–µ–π—à–µ–π –±–æ—Ä—å–±–µ –æ–Ω–∏ —Ç–∞–∫–∏ –≤—ã—Ä–≤–∞–ª–∏ —Å–≤–æ—é –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é –ø–æ–±–µ–¥—É. 
–ü–æ–∂–µ–ª–∞–µ–º –∏–º –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.''')
            await bot.send_message(group_id, f'–ó–∞ –≤–∞–º–∏ –ø—Ä–∏–µ—Ö–∞–ª–∏..')
            file = FSInputFile(r'gif_zverev.mp4', 'rb')
            await bot.send_video(group_id, file)

        # –û–±–Ω—É–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
        worksheet.update('A1:A10', [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]])
        worksheet.update('C1:C10', [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]])
        await bot.send_message(group_id, f'–ó–∞ —Ç–æ–±–æ–π –ø—Ä–∏–µ—Ö–∞–ª–∏..')
        file = FSInputFile(r'gif_zverev.mp4', 'rb')
        await bot.send_video(group_id, file)
    else:
        pass


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö "–ø–∏–¥–∞—Ä–∞—Å–æ–≤" –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∞—Ç—ã
async def celebrate_day():
    if datetime.now().day == 31 and datetime.now().month == 12:
        return 'üéâ–ù–æ–≤–æ–≥–æ–¥–Ω–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ'
    elif datetime.now().day == 7 and datetime.now().month == 1:
        return 'üéâ–†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ'
    elif datetime.now().day == 14 and datetime.now().month == 1:
        return 'üéâ–°—Ç–∞—Ä–æ–Ω–æ–≤–æ–≥–æ–¥–Ω–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ'
    elif datetime.now().day == 14 and datetime.now().month == 2:
        return 'üéâ–õ–∏—á–Ω—ã–º –ø–∏–¥–∞—Ä–∞—Å–æ–º –í–∞–ª–µ–Ω—Ç–∏–Ω–∞üéâ'
    elif datetime.now().day == 23 and datetime.now().month == 2:
        return 'üéâ–ó–∞—â–∏—â–µ–Ω–Ω—ã–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ'
    elif datetime.now().day == 8 and datetime.now().month == 3:
        return 'üéâ–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –∂–µ–Ω—Å–∫–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ'
    elif datetime.now().day == 1 and datetime.now().month == 5:
        return 'üéâ–ú–∏—Ä–Ω—ã–º —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã–º –∏ –º–∞–π—Å–∫–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ'
    elif datetime.now().day == 1 and datetime.now().month == 9:
        return 'üéâ–®–∫–æ–ª—å–Ω—ã–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ'
    elif datetime.now().day == 4 and datetime.now().month == 11:
        return 'üéâ–ù–∞—Ä–æ–¥–Ω—ã–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ'
    else:
        return '–ü–∏–¥–∞—Ä–∞—Å–æ–º –¥–Ω—è'


# –§—É–Ω–∫—Ü–∏—è "—à–∞—Ä–∞ —Å—É–¥—å–±—ã", –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —à–∞—Ä–∞ —Å –æ—Ç–≤–µ—Ç–æ–º
async def ball_of_fate():
    ball_choice = choice([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])
    if ball_choice == 1:
        ball_answer = FSInputFile(r"ball/var_one.png", 'rb')
        return ball_answer
    elif ball_choice == 2:
        ball_answer = FSInputFile(r"ball/var_two.png", 'rb')
        return ball_answer
    elif ball_choice == 3:
        ball_answer = FSInputFile(r"ball/var_tree.png", 'rb')
        return ball_answer
    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —à–∞—Ä–∞
    # (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ñ–∞–π–ª—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ var_one.png, var_two.png –∏ —Ç. –¥.)
    elif ball_choice == 4:
        ball_answer = FSInputFile(r"ball/var_four.png", 'rb')
        return ball_answer
    elif ball_choice == 5:
        ball_answer = FSInputFile(r"ball/var_five.png", 'rb')
        return ball_answer
    elif ball_choice == 6:
        ball_answer = FSInputFile(r"ball/var_six.png", 'rb')
        return ball_answer
    elif ball_choice == 7:
        ball_answer = FSInputFile(r"ball/var_seven.png", 'rb')
        return ball_answer
    elif ball_choice == 8:
        ball_answer = FSInputFile(r"ball/var_eight.png", 'rb')
        return ball_answer
    elif ball_choice == 9:
        ball_answer = FSInputFile(r"ball/var_nine.png", 'rb')
        return ball_answer
    elif ball_choice == 10:
        ball_answer = FSInputFile(r"ball/var_ten.png", 'rb')
        return ball_answer
    elif ball_choice == 11:
        ball_answer = FSInputFile(r"ball/var_eleven.png", 'rb')
        return ball_answer


class Davinci:
    # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
    global saved_messages_davinci
    global provider_list

    # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –±–æ—Ç–∞, —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç–µ–∫—Å—Ç
    def __init__(self, bot, message, text):
        self.bot = bot
        self.message = message
        self.text = text

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
    async def answer(self):
        try:
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            saved_messages_davinci.insert(0, f'–í—ã: {self.text}\n')
            # –°–æ–∑–¥–∞–µ–º "–ø—Ä–æ–º–ø—Ç" –¥–ª—è –º–æ–¥–µ–ª–∏, –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            prompt_davinci = (''.join(reversed(saved_messages_davinci)))
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è
            await self.bot.send_message(self.message.chat.id, f'—Å–µ–∫—É–Ω–¥—É..')
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç —É –º–æ–¥–µ–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—è GPT-3.5
            response = await g4f.ChatCompletion.create_async(
                model=g4f.models.default,
                messages=[{"role": "user", "content": f'{prompt_davinci}'}],
                provider=choice(provider_list))
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await self.bot.send_message(self.message.chat.id, f'{response}')
            # –í—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            saved_messages_davinci.insert(0, f'{str(response)}\n')
            # –ï—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ–ª–µ–µ 8 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ
            if len(saved_messages_davinci) >= 8:
                del saved_messages_davinci[3:]
        except Exception:
            # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ä—ã–≤–µ
            await self.bot.send_message(self.message.chat.id, "–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –º–Ω–µ –Ω—É–∂–µ–Ω –ø–µ—Ä–µ–∫—É—Ä..")
            # –£–¥–∞–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ
            del saved_messages_davinci[1:]


# class Artur:
#     global saved_messages_artur
#     global provider_list
#
#     def __init__(self, bot, message, text):
#         try:
#             self.bot = bot
#             self.message = message
#             self.text = text
#             answer_model = open('Artur_mini.txt', 'r', encoding='utf-8')
#             saved_messages_artur.insert(0, f'–í—ã: {self.text}\n')
#             prompt_text = (str(answer_model.read()) + ''.join(reversed(saved_messages_artur)))
#             self.bot.send_message(message.chat.id, f'—Å–µ–∫—É–Ω–¥—É..')
#             response = g4f.ChatCompletion.create(
#                 model=g4f.models.default,
#                 messages=[{"role": "user", "content": f'{prompt_text}'}],
#                 provider=(choice(provider_list)),
#                 stream=False)
#             self.bot.send_message(message.chat.id, f'{response}')
#             saved_messages_artur.insert(0, f'{str(response)}\n')
#             if len(saved_messages_artur) >= 6:
#                 del saved_messages_artur[3:]
#         except Exception:
#             self.bot.send_message(message.chat.id, "–ó–∞–Ω–∏–º–∞–π—Å—è..")
#             del saved_messages_artur[1:]


async def Artur_pozdravlyaet(bot, text):
    try:
        # –°–æ–∑–¥–∞–µ–º "–ø—Ä–æ–º–ø—Ç" –¥–ª—è –º–æ–¥–µ–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—è –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        prompt_text = text
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç —É –º–æ–¥–µ–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—è GPT-3.5
        response = await g4f.ChatCompletion.create_async(
            model=g4f.models.default,
            messages=[{"role": "user", "content": f'{prompt_text}'}],
            provider=choice(provider_list))
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –≥—Ä—É–ø–ø—É
        await bot.send_message(group_id, f'{response}')
    except Exception:
        # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        await Artur_pozdravlyaet(bot, text)
        # –£–¥–∞–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ
        del saved_messages_artur[1:]


# –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
class YaDisk:

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞
    def __init__(self, bot, message):
        self.bot = bot
        self.message = message

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
    async def save_photo(self):
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            await self.bot.send_message(self.message.chat.id, '–ó–∞–≥—Ä—É–∂–∞—é...')
            file_id = self.message.photo[-1].file_id
            file = await self.bot.get_file(file_id)
            file_path = file.file_path
            src = f'/—Å—É–µ—Ç–æ–ª–æ–≥–∏/{datetime.now().day}.{datetime.now().month}.{datetime.now().year}'

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
            if y.exists(src) is False:
                y.mkdir(src)

            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
            y.upload(await self.bot.download_file(file_path),
                     f'{src}/{datetime.now().hour}.{datetime.now().minute}.{datetime.now().second}.jpg')
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
            await self.bot.send_message(self.message.chat.id, '–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')

        except Exception:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await self.bot.send_message(self.message.chat.id, '–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å')

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
    async def save_doc(self):
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            await self.bot.send_message(self.message.chat.id, '–ó–∞–≥—Ä—É–∂–∞—é...')
            file_id = self.message.document.file_id
            file = await self.bot.get_file(file_id)
            file_path = file.file_path
            src = f'/—Å—É–µ—Ç–æ–ª–æ–≥–∏/{datetime.now().day}.{datetime.now().month}.{datetime.now().year}'

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
            if y.exists(src) is False:
                y.mkdir(src)

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
            y.upload(await self.bot.download_file(file_path),
                     f'{src}/{self.message.document.file_name}')
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
            await self.bot.send_message(self.message.chat.id, '–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω')

        except Exception:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await self.bot.send_message(self.message.chat.id, '–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å')

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
    async def save_video(self):
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            await self.bot.send_message(self.message.chat.id, '–ó–∞–≥—Ä—É–∂–∞—é...')
            file_id = self.message.video.file_id
            file = await self.bot.get_file(file_id)
            file_path = file.file_path
            src = f'/—Å—É–µ—Ç–æ–ª–æ–≥–∏/{datetime.now().day}.{datetime.now().month}.{datetime.now().year}'

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
            if y.exists(src) is False:
                y.mkdir(src)

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
            y.upload(await self.bot.download_file(file_path),
                     f'{src}/{self.message.video.file_name}')
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
            await self.bot.send_message(self.message.chat.id, '–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')

        except Exception:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await self.bot.send_message(self.message.chat.id, '–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å')
